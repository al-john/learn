{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.states.ts","webpack:///./src/app/components/contents/dashboard/dashboard.component.html","webpack:///./src/app/components/contents/dashboard/dashboard.component.scss","webpack:///./src/app/components/contents/dashboard/dashboard.component.ts","webpack:///./src/app/components/forms/login/login.component.css","webpack:///./src/app/components/forms/login/login.component.html","webpack:///./src/app/components/forms/login/login.component.ts","webpack:///./src/app/components/forms/password-reset/password-reset.component.html","webpack:///./src/app/components/forms/password-reset/password-reset.component.scss","webpack:///./src/app/components/forms/password-reset/password-reset.component.ts","webpack:///./src/app/components/forms/recover/recover.component.html","webpack:///./src/app/components/forms/recover/recover.component.scss","webpack:///./src/app/components/forms/recover/recover.component.ts","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.scss","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/constants/urls.ts","webpack:///./src/app/models/user.model.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/app/services/token.service.ts","webpack:///./src/app/utils/layouts.utils.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<ui-view name=\\\"content\\\"></ui-view>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'learning-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule }    from '@angular/common/http';\n\n\n// INSTALLED MODULES\nimport { UIRouterModule } from '@uirouter/angular';\nimport { SatPopoverModule } from '@ncstate/sat-popover';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\n\n//PROJECT IMPORTS\nimport { APP_STATES } from './app.states';\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './components/contents/dashboard/dashboard.component';\nimport { LoginComponent } from './components/forms/login/login.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { RecoverComponent } from './components/forms/recover/recover.component';\nimport { PasswordResetComponent } from './components/forms/password-reset/password-reset.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    LoginComponent,\n    HeaderComponent,\n    RecoverComponent,\n    PasswordResetComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    UIRouterModule.forRoot(APP_STATES),\n    FormsModule,\n    HttpClientModule,\n    SatPopoverModule,\n    FlashMessagesModule.forRoot(),\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ContentOnly } from './utils/layouts.utils'\r\nimport { DashboardComponent } from './components/contents/dashboard/dashboard.component'\r\nimport { LoginComponent } from './components/forms/login/login.component'\r\nimport { RecoverComponent } from './components/forms/recover/recover.component';\r\nimport { PasswordResetComponent } from './components/forms/password-reset/password-reset.component';\r\nimport { Transition } from '@uirouter/core';\r\n\r\nlet HOME_STATE: Object[] = [\r\n    {\r\n        name: 'home',\r\n        url: '/',\r\n        views: ContentOnly(DashboardComponent),\r\n    }\r\n]\r\nlet LOGIN_STATE: Object[] = [\r\n    {\r\n        name: 'login',\r\n        url: '/login',\r\n        views: ContentOnly(LoginComponent),\r\n    }\r\n]\r\nlet RECOVER_STATE: Object[] = [\r\n    {\r\n        name: 'recover',\r\n        url: '/recover',\r\n        views: ContentOnly(RecoverComponent),\r\n    }\r\n]\r\nlet PASSWORD_RESET_STATE: Object[] = [\r\n    {\r\n        name: 'password-reset',\r\n        url: '/password-reset?token=',\r\n        views: ContentOnly(PasswordResetComponent),\r\n        resolve: [\r\n            { \r\n              token: 'reset', \r\n              deps: [Transition],\r\n              resolveFn: (trans) => null\r\n            }\r\n        ]\r\n    }\r\n]\r\nexport const APP_STATES = {\r\n\totherwise: '/',\r\n\tstates: [].concat(\r\n        HOME_STATE,\r\n        LOGIN_STATE,\r\n        RECOVER_STATE,\r\n        PASSWORD_RESET_STATE,\r\n\t)\r\n}","module.exports = \"<app-header></app-header>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../services/authentication.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(\n    private authService: AuthenticationService\n  ) { }\n\n  ngOnInit() {  \n    this.authService.authenticate()\n  }\n\n}\n","module.exports = \"\\r\\n\\r\\n/* .ng-invalid:not(form){\\r\\n    border-left: 5px solid;\\r\\n    border-top-left-radius: 0;\\r\\n    border-bottom-left-radius: 0;\\r\\n    border-color: #dd4b39;\\r\\n}\\r\\n\\r\\n.ng-valid:not(form){\\r\\n    border-left: 5px solid;\\r\\n    border-top-left-radius: 0;\\r\\n    border-bottom-left-radius: 0;\\r\\n    border-color: green;\\r\\n} */\\r\\n\"","module.exports = \"<div class=\\\"form-wrap\\\">  \\n  <div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"form-content col-sm-4 mt-4\\\">\\n        \\n        <h3 class=\\\"text-center my-4\\\">LOGIN</h3>\\n        <flash-messages></flash-messages>\\n        <div class=\\\"col-sm-12\\\">\\n          <form #loginForm=ngForm (ngSubmit)=\\\"login()\\\">\\n            <div class=\\\"form-group\\\">\\n              <input type=\\\"email\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Email\\\" name=\\\"email\\\" [(ngModel)]=\\\"form.email\\\" email required>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <input type=\\\"password\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"form.password\\\" name=\\\"password\\\" required>\\n            </div> \\n            <!-- <div class=\\\"input-group mb-3\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\" aria-describedby=\\\"my-search\\\">\\n              <div class=\\\"input-group-append\\\">\\n                <span class=\\\"input-group-text\\\" id=\\\"my-search\\\"><i class=\\\"fa fa-filter\\\"></i></span>\\n              </div>\\n            </div> -->\\n            <div class=\\\"form-group mt-4\\\">\\n              <a uiSref=\\\"recover\\\" class=\\\"float-right mt-2\\\">Forgot password?</a>\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-flat\\\" [disabled]=\\\"!loginForm.valid\\\">Login</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { StateService } from '../../../../../node_modules/@uirouter/core';\nimport { User } from '../../../models/user.model';\nimport { TokenService } from '../../../services/token.service';\nimport { FlashMessagesService } from '../../../../../node_modules/angular2-flash-messages';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\n  public form = new User()\n\n  constructor(\n    private authService: AuthenticationService,\n    private stateService: StateService,\n    private token: TokenService,\n    private flash: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n  }\n  \n  login(){\n    var credits = { \"email\":this.form.email, \"password\":this.form.password }\n    this.authService.loginUser(credits).\n      subscribe(response => {\n        this.token.handle(response['access_token']);            \n        this.stateService.go('home')\n        },\n        error => {\n          this.flash.show(error.error.error,{});\n          console.log(typeof(error));\n        }\n      );\n  }\n}\n","module.exports = \"<div class=\\\"form-wrap\\\">  \\n    <div class=\\\"container\\\">\\n      <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"form-content col-sm-4 mt-4\\\">\\n          \\n          <h3 class=\\\"text-center my-4\\\">RESET PASSWORD</h3>\\n          \\n          <div class=\\\"col-sm-12\\\">\\n            <form #resetPasswordForm=ngForm (ngSubmit)=\\\"onSubmit()\\\">\\n              \\n              <div class=\\\"form-group\\\">\\n                <input type=\\\"password\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"form.password\\\" name=\\\"password\\\" required>\\n              </div> \\n              <div class=\\\"form-group\\\">\\n                  <input type=\\\"password\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Confirm password\\\" name=\\\"confirm_password\\\" [(ngModel)]=\\\"form.password_confirmation\\\" required>\\n                </div>\\n              <div class=\\\"form-group mt-4\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-flat\\\" [disabled]=\\\"!resetPasswordForm.valid\\\">Change password</button>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  \"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { StateService, Transition } from '../../../../../node_modules/@uirouter/core';\nimport { ApiService } from '../../../services/api.service';\nimport { RESET_PASSWORD } from '../../../constants/urls';\nimport { AuthenticationService } from '../../../services/authentication.service';\n\n\n@Component({\n  selector: 'app-password-reset',\n  templateUrl: './password-reset.component.html',\n  styleUrls: ['./password-reset.component.scss']\n})\nexport class PasswordResetComponent implements OnInit {\n\n  form = { reset_token: this.state.params.token }\n\n  constructor(\n    private state: StateService,\n    private http: AuthenticationService\n  ) { \n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit(){\n    console.log(this.form);\n    \n    this.http.changePassword(this.form)\n        .subscribe(\n          response=>{\n            console.log(response)\n          },\n          error =>{\n            console.log(error)\n          }\n        );\n  }\n\n}\n","module.exports = \"<div class=\\\"form-wrap\\\">  \\n  <div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"form-content col-sm-4 mt-4\\\">\\n        \\n        <h3 class=\\\"text-center my-4\\\">RECOVER ACCOUNT</h3>\\n        \\n        <div class=\\\"col-sm-12\\\">\\n          <form #recoveryForm=ngForm (ngSubmit)=\\\"onSubmit()\\\">\\n            <div class=\\\"form-group\\\">\\n              <input type=\\\"email\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Email\\\" name=\\\"email\\\" [(ngModel)]=\\\"form.email\\\" email required>\\n            </div>            \\n            <div class=\\\"form-group mt-4\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-flat btn-sm\\\" [disabled]=\\\"!recoveryForm.valid\\\">\\n                <i class=\\\"fa\\\" [ngClass]=\\\"{'fa-spinner fa-spin' : is_saving, 'fa-save': !is_saving}\\\"></i>\\n                {{ button_text }}\\n              </button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n  \"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../../models/user.model';\nimport { ApiService } from '../../../services/api.service';\nimport { StateService } from '../../../../../node_modules/@uirouter/core';\nimport { RECOVER_ACCOUNT } from '../../../constants/urls';\nimport { AuthenticationService } from '../../../services/authentication.service';\n\n\n@Component({\n  selector: 'app-recover',\n  templateUrl: './recover.component.html',\n  styleUrls: ['./recover.component.scss']\n})\nexport class RecoverComponent implements OnInit {\n\n  public form = new User()\n  public is_saving = false\n  public button_text = 'Send password reset link'\n\n  constructor(\n    private http: AuthenticationService,\n    private state: StateService,\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  onSubmit(){\n    this.changeStatus()\n    this.http.recoverAccount(this.form)\n      .subscribe(\n        response =>{\n          console.log(response['data'])\n          this.changeStatus()\n        },\n        error =>{\n          this.changeStatus()\n        }\n      );\n  }\n\n  private changeStatus(){\n    if(!this.is_saving){\n      this.is_saving = true\n      this.button_text = 'Sending email'\n      return\n    }\n    this.is_saving = false\n    this.button_text = 'Send password reset link'\n  }\n}\n","module.exports = \"\\n<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n    <a href=\\\"#\\\" class=\\\"navbar-brand\\\">Header</a>\\n\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#nav-responsive\\\" aria-controls=\\\"nav-responsive\\\" aria-expanded=\\\"true\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"nav-responsive\\\">\\n        <ul class=\\\"navbar-nav ml-auto\\\">\\n            <li class=\\\"nav-item\\\">                        \\n                <a href=\\\"#\\\" (click)=\\\"logout()\\\">Log-out</a>\\n            </li>\\n        </ul>\\n        \\n    </div>\\n</nav>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../services/api.service';\nimport { LOGOUT_USER } from '../../constants/urls';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { TokenService } from '../../services/token.service';\nimport { StateService } from '../../../../node_modules/@uirouter/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(\n    private auth : AuthenticationService,\n    private token: TokenService,\n    private stateService: StateService\n  ) { }\n\n  ngOnInit(){\n  }\n\n  logout(){\n      var token = { 'token' : localStorage.getItem('token') }\n      this.auth.logoutUser(token)\n        .subscribe(\n          ()=> {\n            this.token.remove()\n            this.stateService.go('login')\n          }\n      );\n  }\n\n}\n","export const LOGIN_USER = () => 'api/login/';\nexport const LOGOUT_USER = () => 'api/logout/';\nexport const RECOVER_ACCOUNT = () => 'api/recover';\nexport const RESET_PASSWORD = () => 'api/reset-password';\n","export class User {\n    first_name: string\n    middle_name: string\n    last_name: string\n    email: string\n    password: string\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { StateService } from '@uirouter/angular';\n\nimport { LOGIN_USER, LOGOUT_USER, RECOVER_ACCOUNT, RESET_PASSWORD } from '../constants/urls';\nimport { TokenService } from './token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(\n      private stateService: StateService,\n      private http: HttpClient,\n      private tokenService: TokenService,\n  ) { }\n\n  authenticate(){\n      if(!this.tokenService.get()){\n        this.stateService.go('login')\n      }\n  }\n\n  loginUser(credentials){\n      return this.http.post(LOGIN_USER(),credentials)\n  }\n\n  logoutUser(token){\n    return this.http.post(LOGOUT_USER(),token)\n  }\n\n  recoverAccount(email){\n    return this.http.post(RECOVER_ACCOUNT(),email)\n  }\n  \n  changePassword(data){\n    return this.http.post(RESET_PASSWORD(),data)\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n\n  private token_name = 'token';\n\n  constructor() { }\n  \n  private set(token){\n    localStorage.setItem(this.token_name, token)\n  }\n\n  handle(token){\n    this.set(token)\n  }\n\n  get(){\n    return localStorage.getItem(this.token_name)\n  }\n  remove(){\n    localStorage.removeItem(this.token_name)\n  }\n}\n","export function ContentOnly(content){\n\treturn {\n\t\tcontent: content\n\t}\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}